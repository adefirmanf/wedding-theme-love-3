---
import Header from "../components/Header.astro";
import Main from "../layouts/Main.astro";
import TitleAndWeddingDate from "../components/TitleAndWeddingDate.astro";
import GroomProfile from "../components/GroomProfile.astro";
import BrideProfile from "../components/BrideProfile.astro";

// Fetching an API
const response = await fetch("http://localhost:1337/api/love-3-templates/1", {
  headers: {
    Authorization:
      "Bearer " +
      "3f48546e31447a029374c477a61684876b749c194d833e9d197a59a695a052d9089a3a948437ca729e362e3fe1b2392c4195b8bb30c4bf122ee9a0df283c213c3f7ba3ab4d4ccecf7940ccc6dec1b9a856e47d1287ac2d0c7be71ef4a81d6888ac83714aa26ed83d342f71d427098d74e105d1d54d8ce0d83d9df9dad8b8124b",
  },
});
const data = await response.json();
// const title = "Ade & Rifdah";
const {
  bride_and_groom_title,
  married_on,
  groom_description,
  bride_description,
} = data.data.attributes;
const [groom, bride] = bride_and_groom_title.split("&");
---

<Main>
  <Header slot="header" />
  <TitleAndWeddingDate title={bride_and_groom_title} date={married_on} />
  <GroomProfile
    name={groom}
    description={groom_description}
    slot="groom-profile"
  />
  <BrideProfile
    name={bride}
    description={bride_description}
    slot="bride-profile"
  />
</Main>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
